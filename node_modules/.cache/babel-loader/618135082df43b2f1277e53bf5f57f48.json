{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import{formatRelative}from'date-fns';var formatDate=function formatDate(date){var formattedDate='';if(date){// Convert the date in words relative to the current date\nformattedDate=formatRelative(date,new Date());// Uppercase the first letter\nformattedDate=formattedDate.charAt(0).toUpperCase()+formattedDate.slice(1);}return formattedDate;};var Message=function Message(_ref){var _ref$createdAt=_ref.createdAt,createdAt=_ref$createdAt===void 0?null:_ref$createdAt,_ref$text=_ref.text,text=_ref$text===void 0?'':_ref$text,_ref$displayName=_ref.displayName,displayName=_ref$displayName===void 0?'':_ref$displayName,_ref$photoURL=_ref.photoURL,photoURL=_ref$photoURL===void 0?'':_ref$photoURL;if(!text)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"px-4 py-4 rounded-md hover:bg-gray-50 dark:hover:bg-coolDark-600 overflow-hidden flex items-start\",children:[photoURL?/*#__PURE__*/_jsx(\"img\",{src:photoURL,alt:\"Avatar\",className:\"rounded-full mr-4\",width:45,height:45}):null,/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mb-1\",children:[displayName?/*#__PURE__*/_jsx(\"p\",{className:\"mr-2 text-primary-500\",children:displayName}):null,(createdAt===null||createdAt===void 0?void 0:createdAt.seconds)?/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-500 text-xs\",children:formatDate(new Date(createdAt.seconds*1000))}):null]}),/*#__PURE__*/_jsx(\"p\",{children:text})]})]});};export default Message;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/react-firechat-master/src/components/Message.js"],"names":["React","formatRelative","formatDate","date","formattedDate","Date","charAt","toUpperCase","slice","Message","createdAt","text","displayName","photoURL","seconds"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,cAAT,KAA+B,UAA/B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,IAAI,CAAI,CACzB,GAAIC,CAAAA,aAAa,CAAG,EAApB,CACA,GAAID,IAAJ,CAAU,CACR;AACAC,aAAa,CAAGH,cAAc,CAACE,IAAD,CAAO,GAAIE,CAAAA,IAAJ,EAAP,CAA9B,CACA;AACAD,aAAa,CACXA,aAAa,CAACE,MAAd,CAAqB,CAArB,EAAwBC,WAAxB,GAAwCH,aAAa,CAACI,KAAd,CAAoB,CAApB,CAD1C,CAED,CACD,MAAOJ,CAAAA,aAAP,CACD,CAVD,CAYA,GAAMK,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAKV,yBAJJC,SAII,CAJJA,SAII,yBAJQ,IAIR,+BAHJC,IAGI,CAHJA,IAGI,oBAHG,EAGH,iCAFJC,WAEI,CAFJA,WAEI,2BAFU,EAEV,qCADJC,QACI,CADJA,QACI,wBADO,EACP,eACJ,GAAI,CAACF,IAAL,CAAW,MAAO,KAAP,CAEX,mBACE,aAAK,SAAS,CAAC,mGAAf,WACGE,QAAQ,cACP,YACE,GAAG,CAAEA,QADP,CAEE,GAAG,CAAC,QAFN,CAGE,SAAS,CAAC,mBAHZ,CAIE,KAAK,CAAE,EAJT,CAKE,MAAM,CAAE,EALV,EADO,CAQL,IATN,cAUE,oCACE,aAAK,SAAS,CAAC,wBAAf,WACGD,WAAW,cACV,UAAG,SAAS,CAAC,uBAAb,UAAsCA,WAAtC,EADU,CAER,IAHN,CAIG,CAAAF,SAAS,OAAT,EAAAA,SAAS,SAAT,QAAAA,SAAS,CAAEI,OAAX,eACC,aAAM,SAAS,CAAC,uBAAhB,UACGZ,UAAU,CAAC,GAAIG,CAAAA,IAAJ,CAASK,SAAS,CAACI,OAAV,CAAoB,IAA7B,CAAD,CADb,EADD,CAIG,IARN,GADF,cAWE,mBAAIH,IAAJ,EAXF,GAVF,GADF,CA0BD,CAlCD,CA6CA,cAAeF,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatRelative } from 'date-fns';\n\nconst formatDate = date => {\n  let formattedDate = '';\n  if (date) {\n    // Convert the date in words relative to the current date\n    formattedDate = formatRelative(date, new Date());\n    // Uppercase the first letter\n    formattedDate =\n      formattedDate.charAt(0).toUpperCase() + formattedDate.slice(1);\n  }\n  return formattedDate;\n};\n\nconst Message = ({\n  createdAt = null,\n  text = '',\n  displayName = '',\n  photoURL = '',\n}) => {\n  if (!text) return null;\n\n  return (\n    <div className=\"px-4 py-4 rounded-md hover:bg-gray-50 dark:hover:bg-coolDark-600 overflow-hidden flex items-start\">\n      {photoURL ? (\n        <img\n          src={photoURL}\n          alt=\"Avatar\"\n          className=\"rounded-full mr-4\"\n          width={45}\n          height={45}\n        />\n      ) : null}\n      <div>\n        <div className=\"flex items-center mb-1\">\n          {displayName ? (\n            <p className=\"mr-2 text-primary-500\">{displayName}</p>\n          ) : null}\n          {createdAt?.seconds ? (\n            <span className=\"text-gray-500 text-xs\">\n              {formatDate(new Date(createdAt.seconds * 1000))}\n            </span>\n          ) : null}\n        </div>\n        <p>{text}</p>\n      </div>\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  text: PropTypes.string,\n  createdAt: PropTypes.shape({\n    seconds: PropTypes.number,\n  }),\n  displayName: PropTypes.string,\n  photoURL: PropTypes.string,\n};\n\nexport default Message;\n"]},"metadata":{},"sourceType":"module"}